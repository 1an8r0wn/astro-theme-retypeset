<script>
let lightbox: any = null

function cleanupLightbox(): void {
  if (lightbox) {
    lightbox.destroy()
    lightbox = null
  }
}

async function setupPhotoSwipe(): Promise<void> {
  cleanupLightbox()

  const article = document.querySelector('article.heti')
  if (!article) {
    return
  }

  const images = article.getElementsByTagName('img')
  if (images.length === 0) {
    return
  }

  const { innerWidth, innerHeight } = window

  try {
    const pswp = await import('photoswipe')
    const { default: PhotoSwipeLightbox } = await import('photoswipe/lightbox')

    lightbox = new PhotoSwipeLightbox({
      gallery: 'article.heti img',
      pswpModule: () => Promise.resolve(pswp.default),
      bgOpacity: 0.9,
      padding: {
        top: innerHeight * 0.1,
        bottom: innerHeight * 0.1,
        left: innerWidth * 0.073,
        right: innerWidth * 0.073,
      },
      zoom: false,
      close: false,
      wheelToZoom: true,
      imageClickAction: 'close',
      tapAction: 'close',
    })

    // Set image dimensions
    lightbox.addFilter('domItemData', (itemData: any, element: Element) => {
      if (!(element instanceof HTMLImageElement)) {
        return itemData
      }

      // Set image source
      itemData.src = element.src

      // Set dimensions with fallback to window size
      itemData.w = element.naturalWidth || innerWidth
      itemData.h = element.naturalHeight || innerHeight

      // Set thumbnail source
      itemData.msrc = element.src

      return itemData
    })

    lightbox.init()
  }
  catch (error) {
    console.warn('PhotoSwipe failed to initialize:', error)
  }
}

function lazySetupPhotoSwipe(): void {
  if (typeof window.requestIdleCallback === 'function') {
    window.requestIdleCallback(setupPhotoSwipe, { timeout: 1000 })
  }
  else {
    requestAnimationFrame(setupPhotoSwipe)
  }
}

document.addEventListener('astro:page-load', lazySetupPhotoSwipe)
document.addEventListener('astro:before-swap', cleanupLightbox)
lazySetupPhotoSwipe()
</script>
