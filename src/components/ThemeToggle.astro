<script>
  // Initialize theme toggle button
  const themeToggle = document.querySelector('button[aria-pressed]') as HTMLButtonElement

  // Set theme and sync all states
  function setTheme(isDark: boolean) {
    const theme = isDark ? 'dark' : 'light'
    document.documentElement.setAttribute('data-theme', theme)
    document.documentElement.classList.toggle('dark', isDark)
    themeToggle.setAttribute('aria-pressed', String(isDark))
    localStorage.setItem('theme', theme)
    document.dispatchEvent(new Event('theme-changed'))
  }

  // Initialize theme: use saved preference or fallback to system preference
  const savedTheme = localStorage.getItem('theme')
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches
  setTheme(savedTheme ? savedTheme === 'dark' : prefersDark)

  // Toggle theme with view transitions API support
  function toggleTheme() {
    const isDark = document.documentElement.getAttribute('data-theme') !== 'dark'
    if (!document.startViewTransition) {
      setTheme(isDark)
      return
    }
    document.startViewTransition(() => setTheme(isDark))
  }

  // Sync with system theme changes only if user hasn't set a preference
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!localStorage.getItem('theme')) {
      setTheme(e.matches)
    }
  })

  themeToggle.addEventListener('click', toggleTheme)
</script>

<button
  aria-pressed="false"
  aria-label="Theme Toggle Button"
  class="absolute right-10 top-10 z-999 aspect-square w-8 c-secondary"
>
  <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor">
    <path d="m12 1c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11m0 20c-5.8 0-10.5-4-10.5-9s4.7-9 10.5-9 10.5 4 10.5 9-4.7 9-10.5 9" />
  </svg>
</button>
