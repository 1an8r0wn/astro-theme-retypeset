<button
  aria-pressed="false"
  aria-label="Theme Toggle Button"
  class="absolute right-[calc(9.94vw-1.18rem)] top-[calc(7.3vw+2.6rem)] z-99 aspect-square w-7 c-secondary [@supports(-webkit-touch-callout:none)]:top-[calc(7.3vw+2.2rem)] active:scale-90"
  lg="hidden"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="m12 1c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11m0 20c-5.8 0-10.5-4-10.5-9s4.7-9 10.5-9 10.5 4 10.5 9-4.7 9-10.5 9" />
  </svg>
</button>

<script>
const theme = localStorage.getItem('theme')
document.documentElement.classList.toggle('dark', theme === 'dark')

function switchTheme() {
  document.body.removeAttribute('data-restore-theme')
  const isDark = document.documentElement.classList.toggle('dark')
  const themeToggle = document.querySelector('button[aria-pressed]') as HTMLButtonElement
  if (themeToggle) {
    themeToggle.setAttribute('aria-pressed', String(isDark))
  }
  localStorage.setItem('theme', isDark ? 'dark' : 'light')
  document.dispatchEvent(new Event('theme-changed'))
}

function toggleTheme() {
  if (!document.startViewTransition) {
    switchTheme()
    return
  }

  document.documentElement.style.setProperty('view-transition-name', 'theme-transition')
  document.documentElement.setAttribute('data-theme-transition', '')

  const transition = document.startViewTransition(() => {
    switchTheme()
  })

  transition.finished.then(() => {
    document.documentElement.style.removeProperty('view-transition-name')
    document.documentElement.removeAttribute('data-theme-transition')
  })
}

function syncTheme() {
  document.documentElement.setAttribute('data-restore-theme', 'true')
  const theme = localStorage.getItem('theme')
  document.documentElement.classList.toggle('dark', theme === 'dark')

  const themeToggle = document.querySelector('button[aria-pressed]') as HTMLButtonElement
  if (themeToggle) {
    themeToggle.setAttribute('aria-pressed', String(theme === 'dark'))
  }

  requestAnimationFrame(() => {
    document.documentElement.removeAttribute('data-restore-theme')
  })
}

// 事件处理函数
function handleAfterSwap() {
  syncTheme()
  const themeToggle = document.querySelector('button[aria-pressed]') as HTMLButtonElement
  if (themeToggle) {
    themeToggle.addEventListener('click', toggleTheme)
  }
}

function handlePageShow(event: PageTransitionEvent) {
  if (event.persisted) {
    syncTheme()
  }
}

// 集中管理所有事件监听器
function initThemeEvents() {
  const themeToggle = document.querySelector('button[aria-pressed]') as HTMLButtonElement
  if (themeToggle) {
    themeToggle.addEventListener('click', toggleTheme)
  }

  document.addEventListener('astro:after-swap', handleAfterSwap)
  window.addEventListener('popstate', syncTheme)
  window.addEventListener('pageshow', handlePageShow)
}

// 初始化
initThemeEvents()
</script>
