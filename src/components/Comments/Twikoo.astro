---
import { defaultLocale, themeConfig } from '@/config'
import { twikooLocaleMap } from '@/i18n/config'

const {
  envId = '',
  region = '',
} = themeConfig.comment?.twikoo ?? {}
---

<div
  id="twikoo"
  class="mt-16"
></div>

<!-- Twikoo Script >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
<script
  is:inline
  src="/vendors/twikoo/twikoo.min.js"
></script>

<script
  is:inline
  define:vars={{
    envId,
    region,
    twikooLocaleMap,
    defaultLocale,
  }}
>
function setupTwikoo() {
  const currentPath = window.location.pathname
  const pathLang = Object.keys(twikooLocaleMap).find(code =>
    currentPath.startsWith(`/${code}/`),
  )
  const lang = pathLang ?? defaultLocale
  const currentTwikooLang = twikooLocaleMap[lang]

  twikoo.init({
    envId,
    el: '#twikoo',
    // ...(region ? { region } : {}),
    path: window.location.pathname.replace(/^\/([a-z]{2}(-[a-z]{2})?)\//, '/'), // Share comments on posts in different languages
    lang: currentTwikooLang,
  })
}

// Create an intersection observer to lazy load Twikoo comments when the container enters viewport
function lazySetupTwikoo() {
  const twikooContainer = document.getElementById('twikoo')
  if (!twikooContainer) {
    return
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        setupTwikoo()
        observer.unobserve(entry.target)
      }
    })
  }, { rootMargin: '200px' })

  observer.observe(twikooContainer)
}

lazySetupTwikoo()
document.addEventListener('astro:page-load', lazySetupTwikoo)
</script>
