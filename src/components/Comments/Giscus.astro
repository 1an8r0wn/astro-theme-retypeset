---
import { defaultLocale, themeConfig } from '@/config'
import { giscusLocaleMap } from '@/i18n/config'

const {
  repo = '',
  repoID = '',
  category = '',
  categoryID = '',
  mapping = 'pathname',
  strict = '0',
  reactionsEnabled = '1',
  emitMetadata = '0',
  inputPosition = 'bottom',
} = themeConfig.comment?.giscus ?? {}

const siteUrl = themeConfig.site.url
const shouldRender = Boolean(repo && repoID && categoryID)
---

{shouldRender && (
  <div
    id="giscus"
    class="giscus mt-16"
  ></div>

  <script
    is:inline
    define:vars={{
      repo,
      repoID,
      category,
      categoryID,
      mapping,
      strict,
      reactionsEnabled,
      emitMetadata,
      inputPosition,
      giscusLocaleMap,
      defaultLocale,
      siteUrl,
    }}
  >
  function setupGiscus() {
    const giscusContainer = document.getElementById('giscus')
    if (!giscusContainer)
      return

    giscusContainer.innerHTML = ''

    const currentPath = window.location.pathname
    const pathLang = Object.keys(giscusLocaleMap).find(code =>
      currentPath.startsWith(`/${code}/`),
    )
    const lang = pathLang || defaultLocale
    const currentGiscusLang = giscusLocaleMap[lang]

    const script = document.createElement('script')
    script.src = 'https://giscus.app/client.js'
    script.crossOrigin = 'anonymous'
    script.async = true

    // Set up basic attributes
    const dataAttributes = {
      repo,
      repoId: repoID,
      categoryId: categoryID,
      mapping,
      strict,
      reactionsEnabled,
      emitMetadata,
      inputPosition,
      theme: `${siteUrl}/vendors/giscus/theme.css`,
      lang: currentGiscusLang,
    }

    // Add category conditionally
    if (category)
      dataAttributes.category = category

    // Apply all attributes
    Object.assign(script.dataset, dataAttributes)

    giscusContainer.appendChild(script)
  }

  setupGiscus()
  document.addEventListener('astro:page-load', setupGiscus)
  </script>
)}
