---
import { themeConfig } from '@/config'

const { light: { background: lightMode }, dark: { background: darkMode } } = themeConfig.color
---
<button
  id="theme-toggle"
  aria-label="Theme Toggle Button"
  class="aspect-square w-4.2 c-secondary active:scale-90"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="m12 1c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11m0 20c-5.8 0-10.5-4-10.5-9s4.7-9 10.5-9 10.5 4 10.5 9-4.7 9-10.5 9" />
  </svg>
</button>

<script define:vars={{ lightMode, darkMode }}>
// Update theme
function updateTheme() {
  // Toggle website theme
  document.documentElement.classList.toggle('dark')
  // Get current theme
  const isDark = document.documentElement.classList.contains('dark')
  // Update meta theme color
  const metaThemeColor = document.querySelector('meta[name="theme-color"]')
  if (metaThemeColor) {
    metaThemeColor.setAttribute('content', isDark ? darkMode : lightMode)
  }
  // Update theme configuration in local storage
  localStorage.setItem('theme', isDark ? 'dark' : 'light')
  document.dispatchEvent(new Event('theme-changed'))
}

// Bind click event to the button
function setupThemeToggle() {
  // Locate theme toggle button
  const themeToggleButton = document.getElementById('theme-toggle')
  // Add click listener
  themeToggleButton.addEventListener('click', () => {
    // If browser doesn't support View Transitions API, update theme directly
    if (!document.startViewTransition) {
      updateTheme()
      return
    }
    // Temporarily add markers during animation to implement view transition and disable CSS transitions
    document.documentElement.style.setProperty('view-transition-name', 'theme-transition')
    document.documentElement.setAttribute('data-theme-transition', '')
    // If browser supports View Transitions API, use it to update theme
    const themeTransition = document.startViewTransition(updateTheme)
    // Remove markers after animation
    themeTransition.finished.then(() => {
      document.documentElement.style.removeProperty('view-transition-name')
      document.documentElement.removeAttribute('data-theme-transition')
    })
  })
}

// Initialize click event (on first load or page transition)
document.addEventListener('astro:after-swap', setupThemeToggle)
setupThemeToggle()
</script>
