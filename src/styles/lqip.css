/*!
 * Minimal CSS-only blurry image placeholders
 * https://leanrada.com/notes/css-only-lqip/
 */

[style*="--lqip:"] {
  /* LQIP Variables */
  /* Extracting bit-packed information from the integer hash */
  --lqip-ca: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 18))), 4);
  --lqip-cb: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 16))), 4);
  --lqip-cc: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 14))), 4);
  --lqip-cd: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 12))), 4);
  --lqip-ce: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 10))), 4);
  --lqip-cf: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 8))), 4);
  --lqip-ll: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 6))), 4);
  --lqip-aaa: mod(round(down, calc((var(--lqip) + pow(2, 19)) / pow(2, 3))), 8);
  --lqip-bbb: mod(calc(var(--lqip) + pow(2, 19)), 8);

  /* LQIP Colors */
  /* Converting extracted values to HSL and Oklab color formats */
  --lqip-ca-clr: hsl(0 0% calc(var(--lqip-ca) / 3 * 60% + 20%));
  --lqip-cb-clr: hsl(0 0% calc(var(--lqip-cb) / 3 * 60% + 20%));
  --lqip-cc-clr: hsl(0 0% calc(var(--lqip-cc) / 3 * 60% + 20%));
  --lqip-cd-clr: hsl(0 0% calc(var(--lqip-cd) / 3 * 60% + 20%));
  --lqip-ce-clr: hsl(0 0% calc(var(--lqip-ce) / 3 * 60% + 20%));
  --lqip-cf-clr: hsl(0 0% calc(var(--lqip-cf) / 3 * 60% + 20%));
  --lqip-base-clr: oklab(
    calc(var(--lqip-ll) / 3 * 0.6 + 0.2)
    calc(var(--lqip-aaa) / 8 * 0.7 - 0.35)
    calc((var(--lqip-bbb) + 1) / 8 * 0.7 - 0.35)
  );

  /* LQIP Blend Mode */
  /* Defining how gradient layers blend together */
  background-blend-mode:
    hard-light, hard-light, hard-light, hard-light, hard-light, hard-light,
    overlay, overlay, overlay, overlay, overlay, overlay,
    normal;

  /* Decoding LQIP */
  /* Rendering the placeholder using multiple radial gradients */
  background-image:
  radial-gradient(50% 75% at 16.67% 25%,
    rgb(from var(--lqip-ca-clr) r g b / 100%) 0%,
    rgb(from var(--lqip-ca-clr) r g b / 98%) 10%,
    rgb(from var(--lqip-ca-clr) r g b / 92%) 20%,
    rgb(from var(--lqip-ca-clr) r g b / 82%) 30%,
    rgb(from var(--lqip-ca-clr) r g b / 68%) 40%,
    rgb(from var(--lqip-ca-clr) r g b / 32%) 60%,
    rgb(from var(--lqip-ca-clr) r g b / 18%) 70%,
    rgb(from var(--lqip-ca-clr) r g b / 8%) 80%,
    rgb(from var(--lqip-ca-clr) r g b / 2%) 90%,
    transparent),
  radial-gradient(50% 75% at 50% 25%,
    rgb(from var(--lqip-cb-clr) r g b / 100%) 0%,
    rgb(from var(--lqip-cb-clr) r g b / 98%) 10%,
    rgb(from var(--lqip-cb-clr) r g b / 92%) 20%,
    rgb(from var(--lqip-cb-clr) r g b / 82%) 30%,
    rgb(from var(--lqip-cb-clr) r g b / 68%) 40%,
    rgb(from var(--lqip-cb-clr) r g b / 32%) 60%,
    rgb(from var(--lqip-cb-clr) r g b / 18%) 70%,
    rgb(from var(--lqip-cb-clr) r g b / 8%) 80%,
    rgb(from var(--lqip-cb-clr) r g b / 2%) 90%,
    transparent),
  radial-gradient(50% 75% at 83.33% 25%,
    rgb(from var(--lqip-cc-clr) r g b / 100%) 0%,
    rgb(from var(--lqip-cc-clr) r g b / 98%) 10%,
    rgb(from var(--lqip-cc-clr) r g b / 92%) 20%,
    rgb(from var(--lqip-cc-clr) r g b / 82%) 30%,
    rgb(from var(--lqip-cc-clr) r g b / 68%) 40%,
    rgb(from var(--lqip-cc-clr) r g b / 32%) 60%,
    rgb(from var(--lqip-cc-clr) r g b / 18%) 70%,
    rgb(from var(--lqip-cc-clr) r g b / 8%) 80%,
    rgb(from var(--lqip-cc-clr) r g b / 2%) 90%,
    transparent),
  radial-gradient(50% 75% at 16.67% 75%,
    rgb(from var(--lqip-cd-clr) r g b / 100%) 0%,
    rgb(from var(--lqip-cd-clr) r g b / 98%) 10%,
    rgb(from var(--lqip-cd-clr) r g b / 92%) 20%,
    rgb(from var(--lqip-cd-clr) r g b / 82%) 30%,
    rgb(from var(--lqip-cd-clr) r g b / 68%) 40%,
    rgb(from var(--lqip-cd-clr) r g b / 32%) 60%,
    rgb(from var(--lqip-cd-clr) r g b / 18%) 70%,
    rgb(from var(--lqip-cd-clr) r g b / 8%) 80%,
    rgb(from var(--lqip-cd-clr) r g b / 2%) 90%,
    transparent),
  radial-gradient(50% 75% at 50% 75%,
    rgb(from var(--lqip-ce-clr) r g b / 100%) 0%,
    rgb(from var(--lqip-ce-clr) r g b / 98%) 10%,
    rgb(from var(--lqip-ce-clr) r g b / 92%) 20%,
    rgb(from var(--lqip-ce-clr) r g b / 82%) 30%,
    rgb(from var(--lqip-ce-clr) r g b / 68%) 40%,
    rgb(from var(--lqip-ce-clr) r g b / 32%) 60%,
    rgb(from var(--lqip-ce-clr) r g b / 18%) 70%,
    rgb(from var(--lqip-ce-clr) r g b / 8%) 80%,
    rgb(from var(--lqip-ce-clr) r g b / 2%) 90%,
    transparent),
  radial-gradient(50% 75% at 83.33% 75%,
    rgb(from var(--lqip-cf-clr) r g b / 100%) 0%,
    rgb(from var(--lqip-cf-clr) r g b / 98%) 10%,
    rgb(from var(--lqip-cf-clr) r g b / 92%) 20%,
    rgb(from var(--lqip-cf-clr) r g b / 82%) 30%,
    rgb(from var(--lqip-cf-clr) r g b / 68%) 40%,
    rgb(from var(--lqip-cf-clr) r g b / 32%) 60%,
    rgb(from var(--lqip-cf-clr) r g b / 18%) 70%,
    rgb(from var(--lqip-cf-clr) r g b / 8%) 80%,
    rgb(from var(--lqip-cf-clr) r g b / 2%) 90%,
    transparent),
  linear-gradient(0deg, var(--lqip-base-clr), var(--lqip-base-clr));
}
